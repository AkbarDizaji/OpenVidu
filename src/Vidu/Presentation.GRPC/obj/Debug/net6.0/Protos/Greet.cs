// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/greet.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Presentation.GRPC {

  /// <summary>Holder for reflection information generated from Protos/greet.proto</summary>
  public static partial class GreetReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/greet.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GreetReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJQcm90b3MvZ3JlZXQucHJvdG8SBWdyZWV0IhYKFENyZWF0ZVNlc3Npb25S",
            "ZXF1ZXN0IpEBChJDcmVhdGVTZXNzaW9uUmVwbHkSCgoCaWQYASABKAkSEQoJ",
            "cmVjb3JkaW5nGAIgASgIEhEKCW1lZGlhTW9kZRgDIAEoCRIVCg1yZWNvcmRp",
            "bmdNb2RlGAQgASgJEhgKEGZvcmNlZFZpZGVvQ29kZWMYBSABKAkSGAoQYWxs",
            "b3dUcmFuc2NvZGluZxgGIAEoCDJWCgdHcmVldGVyEksKEVNlbmRTZXNzaW9u",
            "Q3JlYXRlEhsuZ3JlZXQuQ3JlYXRlU2Vzc2lvblJlcXVlc3QaGS5ncmVldC5D",
            "cmVhdGVTZXNzaW9uUmVwbHlCFKoCEVByZXNlbnRhdGlvbi5HUlBDYgZwcm90",
            "bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Presentation.GRPC.CreateSessionRequest), global::Presentation.GRPC.CreateSessionRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Presentation.GRPC.CreateSessionReply), global::Presentation.GRPC.CreateSessionReply.Parser, new[]{ "Id", "Recording", "MediaMode", "RecordingMode", "ForcedVideoCodec", "AllowTranscoding" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// The request message containing the user ids.
  /// </summary>
  public sealed partial class CreateSessionRequest : pb::IMessage<CreateSessionRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateSessionRequest> _parser = new pb::MessageParser<CreateSessionRequest>(() => new CreateSessionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSessionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Presentation.GRPC.GreetReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest(CreateSessionRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionRequest Clone() {
      return new CreateSessionRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSessionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSessionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSessionRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
        }
      }
    }
    #endif

  }

  /// <summary>
  /// The response message containing the greetings.
  /// </summary>
  public sealed partial class CreateSessionReply : pb::IMessage<CreateSessionReply>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<CreateSessionReply> _parser = new pb::MessageParser<CreateSessionReply>(() => new CreateSessionReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateSessionReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Presentation.GRPC.GreetReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionReply(CreateSessionReply other) : this() {
      id_ = other.id_;
      recording_ = other.recording_;
      mediaMode_ = other.mediaMode_;
      recordingMode_ = other.recordingMode_;
      forcedVideoCodec_ = other.forcedVideoCodec_;
      allowTranscoding_ = other.allowTranscoding_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateSessionReply Clone() {
      return new CreateSessionReply(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recording" field.</summary>
    public const int RecordingFieldNumber = 2;
    private bool recording_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Recording {
      get { return recording_; }
      set {
        recording_ = value;
      }
    }

    /// <summary>Field number for the "mediaMode" field.</summary>
    public const int MediaModeFieldNumber = 3;
    private string mediaMode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MediaMode {
      get { return mediaMode_; }
      set {
        mediaMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "recordingMode" field.</summary>
    public const int RecordingModeFieldNumber = 4;
    private string recordingMode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RecordingMode {
      get { return recordingMode_; }
      set {
        recordingMode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "forcedVideoCodec" field.</summary>
    public const int ForcedVideoCodecFieldNumber = 5;
    private string forcedVideoCodec_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ForcedVideoCodec {
      get { return forcedVideoCodec_; }
      set {
        forcedVideoCodec_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "allowTranscoding" field.</summary>
    public const int AllowTranscodingFieldNumber = 6;
    private bool allowTranscoding_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AllowTranscoding {
      get { return allowTranscoding_; }
      set {
        allowTranscoding_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateSessionReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateSessionReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Recording != other.Recording) return false;
      if (MediaMode != other.MediaMode) return false;
      if (RecordingMode != other.RecordingMode) return false;
      if (ForcedVideoCodec != other.ForcedVideoCodec) return false;
      if (AllowTranscoding != other.AllowTranscoding) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Recording != false) hash ^= Recording.GetHashCode();
      if (MediaMode.Length != 0) hash ^= MediaMode.GetHashCode();
      if (RecordingMode.Length != 0) hash ^= RecordingMode.GetHashCode();
      if (ForcedVideoCodec.Length != 0) hash ^= ForcedVideoCodec.GetHashCode();
      if (AllowTranscoding != false) hash ^= AllowTranscoding.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Recording != false) {
        output.WriteRawTag(16);
        output.WriteBool(Recording);
      }
      if (MediaMode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MediaMode);
      }
      if (RecordingMode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RecordingMode);
      }
      if (ForcedVideoCodec.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ForcedVideoCodec);
      }
      if (AllowTranscoding != false) {
        output.WriteRawTag(48);
        output.WriteBool(AllowTranscoding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Recording != false) {
        output.WriteRawTag(16);
        output.WriteBool(Recording);
      }
      if (MediaMode.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(MediaMode);
      }
      if (RecordingMode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RecordingMode);
      }
      if (ForcedVideoCodec.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ForcedVideoCodec);
      }
      if (AllowTranscoding != false) {
        output.WriteRawTag(48);
        output.WriteBool(AllowTranscoding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Recording != false) {
        size += 1 + 1;
      }
      if (MediaMode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MediaMode);
      }
      if (RecordingMode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RecordingMode);
      }
      if (ForcedVideoCodec.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ForcedVideoCodec);
      }
      if (AllowTranscoding != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateSessionReply other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Recording != false) {
        Recording = other.Recording;
      }
      if (other.MediaMode.Length != 0) {
        MediaMode = other.MediaMode;
      }
      if (other.RecordingMode.Length != 0) {
        RecordingMode = other.RecordingMode;
      }
      if (other.ForcedVideoCodec.Length != 0) {
        ForcedVideoCodec = other.ForcedVideoCodec;
      }
      if (other.AllowTranscoding != false) {
        AllowTranscoding = other.AllowTranscoding;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Recording = input.ReadBool();
            break;
          }
          case 26: {
            MediaMode = input.ReadString();
            break;
          }
          case 34: {
            RecordingMode = input.ReadString();
            break;
          }
          case 42: {
            ForcedVideoCodec = input.ReadString();
            break;
          }
          case 48: {
            AllowTranscoding = input.ReadBool();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Recording = input.ReadBool();
            break;
          }
          case 26: {
            MediaMode = input.ReadString();
            break;
          }
          case 34: {
            RecordingMode = input.ReadString();
            break;
          }
          case 42: {
            ForcedVideoCodec = input.ReadString();
            break;
          }
          case 48: {
            AllowTranscoding = input.ReadBool();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
